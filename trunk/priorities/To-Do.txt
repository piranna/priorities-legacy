0.7:
====
? Mensaje de aviso en forma de arbol mostrando cuales se van a eliminar en cascada
	Modificar hijos recursivamente
	Modificar inconsistencia ancentros recursivamente
	Obtener objetivos a eliminar

([BUG] Reorganizar alternativas sin eliminar objetivos no relaccionados)
([BUG] Al eliminar con boton derecho tambien se elimina su dependiente)

[BUG] Al cambiar un objetivo con un requerimiento con una expiracion esta desaparece (¿expiration=None?)
	Cambiar en lugar de eliminar y rehacer requerimientos modificar in-situ
	Cuando se elimine un requerimiento, si es el unico eliminarlo del todo
		Comprobar diferencias entre el antes y el despues


0.8:
====
? Estudiar distribucion de botones
?	Calcular longitud del nivel mas ancho
	Distribuir los demas proporcionalmente
	Con las alternativas, registrarlas y distribuirlas a posteriori
	Distribucion de requerimientos en un mismo nivel debajo de sus alternativas
	Gravity de los botones


0.9:
====
Dibujar alternativas en modo texto
Dibujar lineas en modo texto

Pasar de getopts a optparse
Usar (exclusivamente) opciones largas
Usar opciones afirmativas y negativas


1.0:
====
Internacionalizacion con gettext
	Pasar todas las cadenas de texto de programa e interfaz GTK a ingles

Exportar/importar a texto plano
	Nuevo, abrir, guardar y guardar como afectan a la base de datos
	* Importar y exportar afectan al texto plano y se ejecutan sobre la base de datos actual
		Exportar toda la base de datos o solo una parte del arbol
	Un archivo de texto plano se puede abrir pero en una nueva base de datos en memoria

Cargar/importar archivo de exportacion desde terminal
i Cerrar dialog con insert
Limpiar, simplificar y personalizar consultas SQL y funciones
Cambiar diseño de "añadir y comprobar" a "comprobar y si no añadir"


Post 1.0:
=========
Hacer version de todas las funciones de GTK en modo texto
	Versatilidad de sintaxis
Dibujar comandos en modo texto o NCurses

Version en PyGUI


Oscar's edition: (http://es.wikipedia.org/wiki/Getting_Things_Done)
================
Localizacion de tareas/cambio de prioridades por proximidad fisica


2.0:
====
Limpieza de codigo, reorganizacion y optimizacion
	Cambiar Insert_array_tree_2d a un diccionario ordenado


Wont-fix:
=========
* [Hackeo en Glade] Cancelar cierre de ventana al pulsar cuadro de cierre
i Excepcion al cargar GTK
Quitar foco a todos los botones en GTK
Reordenar manualmente los objetivos (Drag & Drop)
	Recordar cambio de posiciones (¿cambio de ids?)
Arbol en DeleteCascade muestra los elementos en orden de prioridad (diccionarios en python son por definicion desordenados)

