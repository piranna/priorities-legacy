0.12:
=====
[2009-xx-xx] Recordar maximizar
[2011-08-30] Nuevo modelo de base de datos
[2011-09-04] Añadir requisitos como clase propia en lugar de con Glade
[2011-09-04] Usar enumerators para los requisitos y las prioridades
[2011-09-08] [BUG] Cuando hay dependencias mutuas la aplicacion se colapsa (no tiene referencias)
[2011-09-10] [BUG] Objetivos duplicados
[2011-09-10] [BUG] Añadir nuevo requisito
[2011-09-11] [BUG] Al añadir alternativa el valor por defecto es 0 (deberia ser 1)
* Cambiar diseño de interfaz
	* Eliminar requerimientos en AddObjective
	* Eliminar alternativas en AddObjective

1.0 RC3:
========
[2010-09-09] ¿Problema con los colores (verde en lugar de amarillo)?
[BUG] Ciclos
	[BUG] Ciclos destrozan grafo
	[BUG] No se muestran todas las flechas
	[2011-09-10] [BUG] Se produce un bucle infinito al calcular si es satisfecho
* Renombrar clases y componentes
[BUG] No sale menu contextual en el layout
No mostrar el propio objetivo en la combobox de requerimientos
Busqueda de requerimientos en combobox

Usar bases de datos definidas por el usuario, no solo la oculta del usuario
	Opcion para abrir una base de datos por defecto y/o la ultima abierta
	Cambiar extension de BBDD de .sqlite a .pri
Distintos tipos de exportacion/importacion
	Script (.sh.pri)
		* Abstraer requerimientos al obtener de la base de datos (lista de alternativas)
			* Eliminar "RecursiveRequeriments" e integrar en "GetTree"
	SQL (.sql.pri)
		¿Usar funcion de backup de SQLite?


1.0:
====
[2011-09-08] [BUG] Al seleccionar un requerimiento se abre una ventana vacia en lugar de la de su objetivo
Soporte para alternativas opcionales en interfaz y base de datos (definir)
[BUG] Cabeza de flecha esta mal dibujada en requerimientos mutuos
[BUG] Cuando se mezclan alternativas con varios requerimientos se quedan desconectados
[BUG] Crea nueva entrada en lugar de actualizarla
[BUG] Lineas no se redibujan automaticamente (marcar sucio)
[2011-09-12] [BUG] Lineas no se remarcan correctamente al pasar por encima de los requerimientos
[BUG] Alternativas y sus valores no se modifican hasta que pierden el foco
Unittest y BDDs
* Pythonizar y simplificar codigo
	? Comentar todo el codigo
	* Limpiar y ordenar codigo
Reordenar requerimientos y alternativas por drag&drop


Post 1.0:
=========
1.1:
====
Opcion para remarcar solo lineas de alternativas, del requerimiento o todas
Linea punteada para requerimientos opcionales
[2011-09-10] Dar mas prioridad a objetivos con mas dependientes
[2011-09-10] Dar mas prioridad a requisitos con mas alternativas
[2011-08-28] Cambiar diseño de "añadir y comprobar" a "comprobar y si no añadir"
Usar nivel de alternativas mas alto disponible en vez de crear uno nuevo (diagrama mas compacto)
Seleccionar modificadores de prioridad (expiracion, numero de dependientes, cantidad de los dependientes)
Limpiar, simplificar y customizar consultas SQL y funciones

Controller
# [To-Do] It seems it's called twice when has several dependent that are from the same requeriment

Mejorar algoritmo de ordenacion
	Tener referencias a los dependientes y al siguiente (¿anterior y requisitos?)
	Eliminar huecos
		No definir siguiente si no estan relaccionados (definir y comprobar con anterior)
	Obtener coordenadas y tamaño automaticamente
Probar diferentes algoritmos de ordenacion (expansivo, compacto)
Soporte para diversos algoritmos de dibujado

Ayuda dentro de la aplicacion
	Tooltips

Eliminar entradas no validas de ficheros de traduccion

Crear objeto en Glade para navigation bar

Tener en cuenta cuando la base de datos esta en memoria y mostrarlo en barra de titulo

Resaltar lineas de requisitos recursivamente

Si no se elimina ningun objetivo en cascada, hacer que no se redibuje el arbol

* Buscar con autocompletado
	* Cuadro de busqueda en toolbox

? Cargar/importar archivo de exportacion desde terminal en modo texto y gtk
? Hacer version de todas las funciones de GTK en modo texto
	Versatilidad de sintaxis


1.2:
====
* Redefinir interfaz GTK de AddObjective
*	Sustituir campo de texto por lista de requerimientos y alternativas
	Busqueda de objetivos previamente definidos como requisitos de nuevos

Drag&Drop en lista de requerimientos y alternativas
Reordenar requerimientos y alternativas

Definir archivo de preferencias como parametro
	Procesar el archivo antes que el resto de opciones

Usar optparse en Parser.py

Definir y/o diferenciar claramente eliminar en cascada y eliminar huerfanos (son basicamente lo mismo)

Animacion de zoom in y zoom out

Estudiar posibilidad de campo para diferenciar fines en si mismo de medios

Opciones de hacer/deshacer

Dibujar comandos en modo texto o NCurses
Dibujar alternativas en modo texto
Dibujar lineas en modo texto

Mostrar objetivos centrados


Oscar's edition: (http://es.wikipedia.org/wiki/Getting_Things_Done)
================
Localizacion de tareas/cambio de prioridades por proximidad fisica
	Campo de localizacion


2.0:
====
Limpieza de codigo, reorganizacion y optimizacion
	Cambiar Insert_array_tree_2d a un diccionario ordenado por indice

Nueva version de la base de datos
	Usar user-cookie para identificarla (primer byte o incluso menos)
	[2011-08-28] Usar Foreign Key ahora que SQLite lo soporta (v3.6.19, 2009-10-14)
	[2011-08-28] Modificar clave de objetivos de autonumerado a campo name
	[2011-08-28] Volver a estructura de 3 tablas (objetivos, requerimientos y alternativas)
	Usar triggers para eliminar objetivos huerfanos

Version en PyGUI


Wont-fix:
=========
* [Hackeo en Glade] Cancelar cierre de ventana al pulsar cuadro de cierre
i Excepcion al cargar GTK
(Quitar foco a todos los botones en GTK)
Reordenar manualmente los objetivos (Drag & Drop)
	Recordar cambio de posiciones (¿cambio de ids?)
Arbol en DeleteCascade no muestra los elementos en orden de prioridad (diccionarios en python son por definicion desordenados)
Cambiar indices en base de datos a UNSIGNED
* Exportar a imagen con fondo transparente (PNG)
i Cerrar dialog con insert
Eliminar objetivo desde opcion de menu en Main y toolbar
Modificar inconsistencia de los ancestros al eliminar en cascada (inconsistencia = se van a mantener algunos de los hijos)


Aumentar velocidad en algoritmo de seleccion de eliminacion en cascada
	* Usar indices para acelerar su acceso